<div id="segmentPopulation-here"><%- include('images/slices/segments/segment-population.svg') %></div>
<script>
	let triggeredSegmentPopulationGraphAnimation = false;
	const animateSegmentPopulationGraph = () => {
		triggeredSegmentPopulationGraphAnimation = true;

		document.querySelectorAll('.growUp, .growDown, .growAcross').forEach(elm => elm.style.animationPlayState = 'running');
	};

	window.setTimeout(animateSegmentPopulationGraph, 200);

	document.querySelector('#asOfDate tspan').textContent = 'As of ' + locals.localization.dates.todayTerseWithYear;
	document.querySelector('#vsLastMonth tspan').textContent = 'vs. ' + locals.localization.dates.oneMonthAgoTerse;
	document.querySelector('#graphThreeWeeksAgo tspan').textContent = locals.localization.dates.threeWeeksAgoTerse;
	document.querySelector('#graphTwoWeeksAgo tspan').textContent = locals.localization.dates.twoWeeksAgoTerse;
	document.querySelector('#graphOneWeekAgo tspan').textContent = locals.localization.dates.oneWeekAgoTerse;
	document.querySelector('#graphToday tspan').textContent = locals.localization.dates.todayTerse;


</script>
<style type="text/css">
	.growUp, .growDown {
		animation: growUp 2s ease-out forwards;
		transform-origin: center 190px;
		animation-play-state: paused;
	}

	@-webkit-keyframes growUp {
		from { transform: scaleY(1); fill-opacity: 0;}
		60% { transform: scaleY(1); fill-opacity: 0;}
		to { transform: scaleY(1); fill-opacity: 1;}
	}

	.growAcross {
		animation: growAcross 1.5s linear;
		animation-play-state: paused;
		stroke-dasharray: 630px;
	}

	@keyframes growAcross {
		from {
			stroke-dashoffset: 630px;
		}

		to {
			stroke-dashoffset: 0px;
		}
	}
</style>