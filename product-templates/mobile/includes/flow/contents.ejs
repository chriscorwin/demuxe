<%_
	let thisMagickFlowConfig = locals.demoMagickFlows[demoMagickFlowUrlSlugsMapToFlowDirectories[locals.urlSlug]];
	let preLoadImages = '';
_%>
<script type="text/javascript">
	const thisMagickFlowConfig =<%- JSON.stringify(thisMagickFlowConfig)%>;
	console.log('thisMagickFlowConfig', thisMagickFlowConfig);
</script>
<%_
	let showMetaDataMissingError = true;
	let thisMagickFlowMetaData = thisMagickFlowConfig.metaData;


	// marry the metaData to the screens

	
	thisMagickFlowConfig.screens.forEach(function(fileName, fileIndex) {

		// get the "stub" of the filename for each screen, if there is one, and look it up in the metaData

		const thisMagifFlowPath = demoMagickFlows[demoMagickFlowUrlSlugsMapToFlowDirectories[locals.urlSlug]].path;

		let thisMagickFlowsSlideClassnames = {
			'magick-flows-slide': true
		};

		const thisMagickFlowScreenUrl = `/magick-flows/${demoMagickFlowUrlSlugsMapToFlowDirectories[locals.urlSlug]}/${thisMagickFlowConfig.screens[parseInt( fileIndex )]}`;
		const thisMagickFlowScreenHeaderUrl = `includes/${locals.siteSection}/${demoMagickFlowUrlSlugsMapToFlowDirectories[locals.urlSlug]}/${parseInt( fileIndex )}.header.png`;
		const thisMagickFlowScreenFooterUrl = `includes/${locals.siteSection}/${demoMagickFlowUrlSlugsMapToFlowDirectories[locals.urlSlug]}/${parseInt( fileIndex )}.footer.png`;


		let thisMagickFlowScreenCustomContentStylesMarginTop = 0;
		try {
			thisMagickFlowScreenCustomContentStylesMarginTop = parseInt(thisMagickFlowMetaData[fileIndex]['margin-top']);
		}
		catch(error) {
			// The error shown here is unhelpful, and we've trapped it nicely, so we'll just warn a friendly thing.
			thisMagickFlowScreenCustomContentStylesMarginTop = 0;
			if (showMetaDataMissingError === true) {
				console.warn(`
					WARNING

					The Magick Flow in being loaded does not appear to have an entry in the config file in \`localization.magicFlowsMetaData[locals.urlSlug]\`.

					Which is fine, that file is optional, and so is inclusion in the file itself.

					This is just an FYI.
				`);
				showMetaDataMissingError = false;
			}
			// console.error(error);
		}
		if (Number.isNaN(parseInt(thisMagickFlowMetaData[fileIndex]['margin-top']))) {
			thisMagickFlowScreenCustomContentStylesMarginTop = 0;
		}





		let thisMagickFlowScreenCustomContentStylesMarginBottom = 0;
		try {
			thisMagickFlowScreenCustomContentStylesMarginBottom = parseInt(thisMagickFlowMetaData[fileIndex]['margin-bottom']);
		}
		catch(error) {
			thisMagickFlowScreenCustomContentStylesMarginBottom = 0;
			// console.warn(error);
		}
		if (Number.isNaN(parseInt(thisMagickFlowMetaData[fileIndex]['margin-bottom']))) {
			thisMagickFlowScreenCustomContentStylesMarginBottom = 0;
		}



		let showHeader = true;
		showHeader = (thisMagickFlowScreenUrl.includes('has-sticky-header'));
		if(!showHeader) {
			thisMagickFlowScreenCustomContentStylesMarginTop = 0;
		}
		thisMagickFlowsSlideClassnames['has-sticky-header'] = showHeader;

		let showFooter = true;
		showFooter = (thisMagickFlowScreenUrl.includes('has-sticky-footer'));
		if(!showFooter) {
			thisMagickFlowScreenCustomContentStylesMarginBottom = 0;
		}
		thisMagickFlowsSlideClassnames['has-sticky-footer'] = showFooter;





		// let thisMagickFlowScreenCustomContentStylesHeight = 812;
		// try {
		// 	thisMagickFlowScreenCustomContentStylesHeight = parseInt(thisMagickFlowMetaData[fileIndex]['height']);
		// }
		// catch(error) {
		// 	// thisMagickFlowScreenCustomContentStylesHeight = `height: 812px;`;
		// 	// console.warn(error);
		// }
		// // if (thisMagickFlowScreenCustomContentStylesHeight === 'height: undefinedpx;' || showHeader === false) {
		// // 	thisMagickFlowScreenCustomContentStylesHeight = 812;
		// // }

		// console.log(`thisMagickFlowScreenCustomContentStylesHeight: `, thisMagickFlowScreenCustomContentStylesHeight);

		thisMagickFlowScreenCustomContentStylesHeight = (812 - (thisMagickFlowScreenCustomContentStylesMarginTop + thisMagickFlowScreenCustomContentStylesMarginBottom))


		const isPng = thisMagickFlowScreenUrl.endsWith('.png');
		const isSvg = thisMagickFlowScreenUrl.endsWith('.svg');
		const isMp4 = thisMagickFlowScreenUrl.endsWith('.mp4');
		const isGif = thisMagickFlowScreenUrl.endsWith('.gif');
		const isJpeg = thisMagickFlowScreenUrl.endsWith('.jpg');


		preLoadImages += `<img
			class=""
			src="${thisMagickFlowScreenUrl}"
			height="1"
			width="1"
			>
		`;



_%>

<div
	class="slds-grid slds-grid_vertical magick-flows--slide-<%=fileIndex%>  <%= classnames(thisMagickFlowsSlideClassnames);%>"
	data-slide="<%=fileIndex%>"
	id="magick-flows--slide-<%=fileIndex%>"
>
<%_ if (showHeader) { _%>
	<header class="slds-col">
		<div class="magick-flows-stickey-header_container">
			<img
				id="sticky-header--slide-<%=fileIndex%>"
				class="sticky-footer "
				src="<%=thisMagickFlowScreenHeaderUrl%>"
			/>
		</div>
	</header>
<%_ } _%>


	<div
		class="slds-col"
	>
<%_ if (isPng || isSvg || isGif || isJpeg) { _%>
		<div
			class="slds-scrollable"
			style="height: <%=thisMagickFlowScreenCustomContentStylesHeight%>px; margin-bottom: <%=thisMagickFlowScreenCustomContentStylesMarginBottom%>px;"
		>
			<img
				class="screenshot auto-replace is-image "
				id="screenshot--slide-<%=fileIndex%>"
				src="<%=thisMagickFlowScreenUrl%>"
			>
		</div>
<%_ } else if (isMp4) { _%>
		<video
			autoplay
			class="auto-replace is-video "
			id="screenshot-wrapper--slide-<%=fileIndex%>"
			playsinline
		>
			<source
				class="screenshot auto-replace "
				id="screenshot--slide-<%=fileIndex%>"
				src="<%=thisMagickFlowScreenUrl%>"
				type="video/mp4"
			>
			Your browser does not support the video tag.
		</video>
<%_ } _%>
	</div>

<%_ if (showFooter) { _%>
	<footer class="magick-flows-stickey-footer_container slds-col">
		<img
			id="sticky-footer--slide-<%=fileIndex%>"
			class="sticky-footer "
			src="<%=thisMagickFlowScreenFooterUrl%>"
		/>
	</footer>
<%_ } _%>
</div>


<%_ }); _%>

<div class="preload-images">
<%- preLoadImages %>
</div>