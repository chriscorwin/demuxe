<!-- 
Highcharts must be included on page prior to this running
<script type="text/javascript" src="/javascripts/third-party-libraries/highcharts.min.js"></script>
<script type="text/javascript" src="/javascripts/third-party-libraries/highcharts.more.min.js"></script>
-->

<div class="slds-panel-box" style="margin-top: 1em;">
	<div class="slds-panel-box__header slds-p-around_x-small"><%- locals.localization.overview.panels.dce.title %>
		<img class="icon slds-float_right" src="/images/settings.svg" />
	</div>
	<div class="slds-panel-box__body">
		<div class="slds-panel-box__sub-header slds-p-around_x-small">
			<button class="slds-button slds-button_neutral"><%- locals.localization.overview.panels.dce.buttons[0].label %>
				<img class="slds-button__icon slds-button__icon_right" src="/images/icons/down.dark-blue.svg" />
			</button>
		</div>
		<div class="slds-m-around_x-small"><%- locals.localization.overview.panels.dce.explanation %></div>
		<div id="chart" style="width:100%; height:240px;"></div>
		<div style="border-top: 1px solid #D8DDE6; width: 100%; margin: 0;text-align: center;" class="slds-p-around_x-small">
			<a href="<%- locals.localization.overview.panels.dce.view_all.href %>"><%- locals.localization.overview.panels.dce.view_all.text %></a>
		</div>
	</div>
</div>

<script type="text/javascript">
	const deviceData = <%- JSON.stringify(locals.localization.overview.panels.dce.graph.device_data) %>;

	const getCumulativeData = () => {
		return [
			{
				data: deviceData.map((data) => data * 1000),
				color: '<%- locals.localization.overview.panels.dce.graph.line_color %>',
				lineWidth: 3,
				linecap: 'square',
				marker: {
					enabled: false
				}
			}
		];
	};

	const categories = deviceData.map((data, i) => {
		const dateLabel = <%- JSON.stringify(locals.localization.overview.panels.dce.graph.date_labels) %>;
		const label = Math.floor(i / 10);
		return dateLabel[label];
	}, []);

	// Gets options for the Cumulative 1st Party Overview chart
	const getCumulativeOptions = () => {
		return {
			legend: {
				verticalAlign: 'top',
				enabled: false
			},
			title: {
				text: ''
			},
			chart: {
				height: 235,
				style: {
					fontFamily: 'Salesforce Sans'
				}
			},
			xAxis: {
				categories,
				tickLength: 0,
				gridLineWidth: 0,
				lineColor: '#eee',
				gridLineColor: '#eee',
				labels: {
					step: 14
				}
			},
			yAxis: {
				tickInterval: 100000,
				breaks: [{
					from: 0,
					to: 400000,
					breakSize: 1
				}],
				softMin: 400000,
				softMax: 1000000,
				lineWidth: 1,
				lineColor: '#eee',
				gridLineColor: '#eee',
				title: {
					text: '<%- locals.localization.overview.panels.dce.graph.title %>'
				},
				labels: {
					formatter: <%- locals.localization.overview.panels.dce.graph.label_formatter %>
				}
			},
			plotOptions: {
				series: {
					animation: {
						duration: 2000
					}
				}
			},
			series: getCumulativeData()
		};
	};

	const __range__ = (left, right, inclusive) => {
		let range = [];
		let ascending = left < right;
		let nextToLast = ascending ? right + 1 : right - 1;
		let end = !inclusive ? right : nextToLast;
		for (let i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {
			range.push(i);
		}
		return range;
	};

	Highcharts.setOptions({credits: { enabled: false }});
	let dataCaptureEventsSourcesChart;

	let triggeredDataCaptureEventsAnimation = false;
	const animateDataCaptureEvents = () => {
		if (window.scrollY > 100 && !triggeredDataCaptureEventsAnimation) {
			triggeredDataCaptureEventsAnimation = true;
			dataCaptureEventsSourcesChart = Highcharts.chart('chart', getCumulativeOptions());
		}
	};

	document.addEventListener("scroll", animateDataCaptureEvents);
</script>